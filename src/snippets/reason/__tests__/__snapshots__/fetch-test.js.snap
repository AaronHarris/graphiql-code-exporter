// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Generating a ReasonML:react-hooks snippet should generate the correct mutation snippet 1`] = `
Object {
  "options": Object {},
  "snippet": "
let serverUrl = \\"https://api.myservice.com/\\";

let TEST_MUTATION = [%graphql
  {|

mutation testMutation {
  addData(id: \\"id\\") {
    id
  }
}
|}
];

let payload = Js.Dict.empty();
Js.Dict.set(payload, \\"mutation\\", Js.Json.string(TEST_MUTATION));

Js.Promise.(
  Fetch.fetch(
    serverUrl,
    Fetch.RequestInit.make(
      ~method_=Post,
      ~body=
        Fetch.BodyInit.make(Js.Json.stringify(Js.Json.object_(payload))),
      ~headers=Fetch.HeadersInit.make({\\"Content-Type\\": \\"application/json\\"}),
      (),
    ),
  )
  |> then_(Fetch.Response.json)
  |> then_(json => print_endline(json) |> resolve)
);
",
}
`;

exports[`Generating a ReasonML:react-hooks snippet should generate the correct query snippet 1`] = `
Object {
  "options": Object {},
  "snippet": "
let serverUrl = \\"https://api.myservice.com/\\";

let TEST_QUERY = [%graphql
  {|

query testQuery {
  someData {
    id
  }
}

|}
];

let payload = Js.Dict.empty();
Js.Dict.set(payload, \\"query\\", Js.Json.string(TEST_QUERY));

Js.Promise.(
  Fetch.fetch(
    serverUrl,
    Fetch.RequestInit.make(
      ~method_=Post,
      ~body=
        Fetch.BodyInit.make(Js.Json.stringify(Js.Json.object_(payload))),
      ~headers=Fetch.HeadersInit.make({\\"Content-Type\\": \\"application/json\\"}),
      (),
    ),
  )
  |> then_(Fetch.Response.json)
  |> then_(json => print_endline(json) |> resolve)
);
",
}
`;
